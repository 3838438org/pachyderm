#!/bin/sh
# What this hook does:
# create a Docker image from `Dockerfile`
# push that image to the local registry
# restart the services in the cluster
###############################################################################
REPOSITORY_BASENAME=$(basename "$PWD")
REPOSITORY_BASENAME=${REPOSITORY_BASENAME%.git}
if [ ! -d "/tmp/$REPOSITORY_BASENAME" ]; then
  git clone "$PWD" /tmp/"$REPOSITORY_BASENAME"
fi

export GIT_WORK_TREE="/tmp/$REPOSITORY_BASENAME"
git checkout -f

# Startup the supporting services
fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/gitdaemon.service
fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/registry.service
fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/announce-registry.service
# Build the image
REG=$(etcdctl get /pfs/registry)
sudo docker build -t "$REG"/"$REPOSITORY_BASENAME" "$GIT_WORK_TREE"
sudo docker push "$REG"/"$REPOSITORY_BASENAME"
# Restart the pfs services
fleetctl stop "$GIT_WORK_TREE"/deploy/static/dev/master-*; fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/master-*
fleetctl stop "$GIT_WORK_TREE"/deploy/static/dev/router.service; fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/router.service
fleetctl stop "$GIT_WORK_TREE"/deploy/static/dev/announce-*; fleetctl start "$GIT_WORK_TREE"/deploy/static/dev/announce-*
